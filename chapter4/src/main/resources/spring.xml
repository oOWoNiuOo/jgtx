<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 扫描指定包（将带有 Component 注解的类自动定义为 Spring Bean） -->
    <context:component-scan base-package="com.liujianhome"/>

    <!-- 配置一个代理 -->
    <bean id="dogProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 需要代理的接口 -->
        <property name="interfaces" value="com.liujianhome.proxy.Animal"/>
        <!-- 接口实现类 -->
        <property name="target" ref="dog"/>

        <!-- 拦截器名称（也就是增强类名称，Spring Bean 的 id） -->
        <property name="interceptorNames">
            <list>
                <value>dogAroundAdvice</value>
            </list>
        </property>
    </bean>

    <!-- 引入增强 -->
    <bean id="dogIntroProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 需要动态实现的接口 -->
        <property name="interfaces" value="com.liujianhome.aop.demo6.Apology"/>
        <!-- 目标类 -->
        <property name="target" ref="dog"/>

        <!-- 拦截器名称（也就是增强类名称，Spring Bean 的 id） -->
        <property name="interceptorNames">
            <list>
                <value>dogIntorAdvice</value>
            </list>
        </property>

        <!-- 代理目标类（默认为false，代理接口） -->
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!-- 切面 -->
    <bean id="dogAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <!-- 增强 -->
        <property name="advice" ref="dogAroundAdvice"/>
        <!-- 切点 -->
        <property name="pattern" value="com.liujianhome.proxy.Dog.good.*"/>
    </bean>

    <!-- 配置一个代理 -->
    <bean id="dogAdvisorProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 目标类 -->
        <property name="target" ref="dog"/>
        <!-- 切面 -->
        <property name="interceptorNames" value="dogAdvisor"/>

        <!-- 代理目标类 -->
        <property name="proxyTargetClass" value="true"/>
    </bean>

</beans>